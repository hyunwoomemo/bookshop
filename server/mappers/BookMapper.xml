<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BookMapper">

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem">
        SELECT bookTitle, pubName, DATE_FORMAT(pubDate,'%Y-%m-%d') as pubDate, authNo, price, count, selling, bookDesc, bookIndex, ctgNo, img, content, ISBNum, page, size, bannerImg, bannerText FROM book WHERE bookNo= #{bookNo}
    </select>

    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList">
        SELECT bookTitle, pubName, DATE_FORMAT(pubDate,'%Y-%m-%d') as pubDate, authNo, price, count, selling, bookDesc, bookIndex, ctgNo, img, content, ISBNum, page, size, bannerImg, bannerText FROM book

        <where>
            <if test="bookTitle != null and bookTitle != ''">
                bookTitle LIKE concat('%', #{bookTitle}, '%')
            </if>
        </where>

        ORDER BY bookNo ASC

        <!-- 페이지 구현을 위한 LIMIT절 추가 -->
        <if test="listCount > 0">
            LIMIT ${offset}, ${listCount}
        </if>
    </select>

    <!-- 전체분야에서 베스트 10 -->
    <select id="selectListTop10">
      SELECT ROW_NUMBER() OVER (ORDER BY SUM(od.amount) DESC) AS ranking,
         od.bookNo,
         b.bookTitle,
         b.pubName,
         b.price,
         SUM(od.amount) AS sum_amount,
         ctg.ctgName
         FROM orderDetails AS od
         JOIN book AS b ON od.bookNo = b.bookNo
         JOIN category AS ctg ON b.ctgNo = ctg.ctgNo
         JOIN orders AS o ON od.orderNo = o.orderNo
         GROUP BY od.bookNo
         ORDER BY sum_amount DESC
         LIMIT 10;
     </select>
 

    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectListHotPotato">
        SELECT bookTitle, pubName, DATE_FORMAT(pubDate,'%Y-%m-%d') as pubDate, authNo, price, count, selling, bookDesc, bookIndex, ctgNo, img, content, ISBNum, page, size, bannerImg, bannerText FROM book

        <where>
            pubDate BETWEEN DATE_ADD(Now(), INTERVAL -1 MONTH) AND NOW()
        </where>

        ORDER BY selling DESC LIMIT 3
    </select>

    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insertItem">
        INSERT INTO book 
            (bookTitle, pubName, pubDate, authNo, price, count, selling, bookDesc, bookIndex, ctgNo, img, content, ISBNum, page, size, bannerImg, bannerText)
        VALUES 
            (#{bookTitle}, #{pubName}, #{pubDate}, #{authNo}, #{price}, #{count}, #{selling}, #{bookDesc}, #{bookIndex}, #{ctgNo}, #{img}, #{content}, #{ISBNum}, #{page}, #{size}, #{bannerImg}, #{bannerText})
    </insert>

    <!-- 데이터 삭제를 위한 기능 정의 -->
    <delete id="deleteItem">
        DELETE FROM book WHERE bookNo=#{bookNo}
    </delete>

    <!-- 데이터 갱신을 위한 기능 정의 -->
    <update id="updateItem">
        UPDATE book SET 
        bookTitle = #{bookTitle},
        pubName = #{pubName},
        pubDate = #{pubDate},
        authNo = #{authNo},
        price = #{price},
        count= #{count},
        selling = #{selling}, 
        bookDesc = #{bookDesc},
        bookIndex = #{bookIndex},
        ctgNo = #{ctgNo},
        img = #{img},
        content = #{content},
        ISBNum = #{ISBNum},
        page = #{page},
        size = #{size},
        bannerImg = #{bannerImg} 
        bannerText= #{bannerText}
        WHERE bookNo=#{bookNo}
    </update>

    <!-- 데이터 수 조회하기  -->
    <select id="selectCountAll">
        SELECT COUNT(*) AS cnt FROM book

        <where>
            <if test="bookTitle != null and bookTitle != ''">
                bookTitle LIKE concat('%', #{bookTitle}, '%')
            </if>
        </where>
    </select>

</mapper>
